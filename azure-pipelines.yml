# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  monoGameVersion: 'v3.7.1' 
  buildConfiguration: 'Debug'


steps:


- script: |
    powershell -Command "(New-Object System.Net.WebClient).DownloadFile('https://github.com/MonoGame/MonoGame/releases/download/$(monoGameVersion)/MonoGameSetup.exe', '.\MonoGameSetup.exe')"
  displayName: 'Download MonoGame $(monoGameVersion)'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'MonoGameSetup.exe'
    destinationFolder: './tmp/'
  displayName: 'Extract MonoGame $(monoGameVersion)'

- script: |
    mkdir "%PROGRAMFILES(X86)%\MSBuild"
    xcopy .\tmp\$PROGRAMFILES\MSBuild "%PROGRAMFILES(X86)%\MSBuild" /E /Y
    mkdir "%PROGRAMFILES(X86)%\MonoGame\v3.0\Assemblies\"
    xcopy .\tmp\Assemblies "%PROGRAMFILES(X86)%\MonoGame\v3.0\Assemblies" /E /Y
  displayName: 'Install MonoGame $(monoGameVersion)'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    

- task: VSBuild@1
  inputs:
    solution:  '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: NuGetAuthenticate@0
  inputs:
    forceReinstallCredentialProvider: true

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: 'c61dc58a-1f32-46be-90b8-e31af58e803e/304a3823-408b-451b-854a-a009c1732992'

- task: ado-discord-webhook@1
  inputs:
    channelId: '721155107454058527'
    webhookKey: 'z1v8zO1JyAH05ghUYQGHNhGtl5wQAu3jsT5Efh7BjvpNVyRH6m1h2b7V6eDkStL0vK6Z'
    name: 'DankBot'
    avatar: 'https://avatars2.githubusercontent.com/u/8772659?s=460&u=200a491377abf3f599e989cdec2c459bd99d7a5f&v=4'
    messageType: 'content'
    content: 'A new version of Loki2D is avaliable!    [![Build Status](https://dev.azure.com/dankerprouduct2/Loki2D/_apis/build/status/Dankerprouduct.Loki2D?branchName=master)](https://dev.azure.com/dankerprouduct2/Loki2D/_build/latest?definitionId=2&branchName=master)'